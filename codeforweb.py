# -*- coding: utf-8 -*-
"""codeforweb.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-3dCmeM6nX0OGVCaBLGkI6DCp2IIaefn
"""

from flask import Flask, request, jsonify
from flask_cors import CORS
import os
import requests
import spotipy
from spotipy.oauth2 import SpotifyClientCredentials
from dotenv import load_dotenv

app = Flask(__name__)
CORS(app)  # Allow frontend access

# Load API keys from environment variables (or hardcode them)
load_dotenv()
SPOTIFY_CLIENT_ID = os.getenv("SPOTIFY_CLIENT_ID", "e944aa52c12b403d83c17f00e73bc6e9")
SPOTIFY_CLIENT_SECRET = os.getenv("SPOTIFY_CLIENT_SECRET", "59ee0aca4291405fb189bef1ace8aa2c")
GENIUS_ACCESS_TOKEN = os.getenv("GENIUS_ACCESS_TOKEN", "8PWeXQYv4Fu2OrxQ5nLYOEeDcIdRXEG7x1jujtqOhGy575INlkGpd7LkG3noW1Vl")

# Authenticate with Spotify
sp = spotipy.Spotify(auth_manager=SpotifyClientCredentials(
    client_id=SPOTIFY_CLIENT_ID,
    client_secret=SPOTIFY_CLIENT_SECRET
))

@app.route("/search", methods=["GET"])
def search_song():
    """Search for a song in Spotify and return track details + lyrics link."""
    artist = request.args.get("artist")
    song = request.args.get("song")

    if not artist or not song:
        return jsonify({"error": "Missing artist or song name"}), 400

    query = f"track:{song} artist:{artist}"
    results = sp.search(q=query, type="track", limit=1)

    if not results['tracks']['items']:
        return jsonify({"error": "Song not found"}), 404

    track = results['tracks']['items'][0]
    track_data = {
        "track_name": track['name'],
        "artist": track['artists'][0]['name'],
        "album": track['album']['name'],
        "release_date": track['album']['release_date'],
        "spotify_url": f"https://open.spotify.com/track/{track['id']}",
        "preview_url": track.get('preview_url', "No preview available"),
        "lyrics_url": get_lyrics(artist, song)
    }

    return jsonify(track_data)

def get_lyrics(artist, song):
    """Fetch song lyrics URL from Genius API."""
    base_url = "https://api.genius.com"
    headers = {"Authorization": f"Bearer {GENIUS_ACCESS_TOKEN}"}
    search_url = f"{base_url}/search"
    params = {"q": f"{artist} {song}"}

    response = requests.get(search_url, headers=headers, params=params)
    if response.status_code != 200:
        return None

    data = response.json()
    if not data["response"]["hits"]:
        return None

    return data["response"]["hits"][0]["result"]["url"]

if __name__ == "__main__":
    app.run(debug=True)